import scoverage.ScoverageKeys

ThisBuild / scalaVersion := "2.13.16"
ThisBuild / majorVersion := 0

lazy val appName: String = "register-estate-suitability-frontend"

lazy val microservice = Project(appName, file("."))
  .enablePlugins(PlayScala, SbtDistributablesPlugin)
  .disablePlugins(JUnitXmlReportPlugin) //Required to prevent https://github.com/scalatest/scalatest/issues/1427
  .settings(
    routesImport += "models._",
    TwirlKeys.templateImports ++= Seq(
      "play.twirl.api.HtmlFormat",
      "play.twirl.api.HtmlFormat._",
      "uk.gov.hmrc.govukfrontend.views.html.components._",
      "uk.gov.hmrc.hmrcfrontend.views.html.components._",
      "uk.gov.hmrc.hmrcfrontend.views.html.helpers._",
      "views.ViewUtils._",
      "models.Mode",
      "controllers.routes._"
    ),
    PlayKeys.playDefaultPort := 8821,
    ScoverageKeys.coverageExcludedFiles := ".*handlers.*;.*components.*;.*Routes.*;",
    ScoverageKeys.coverageMinimumStmtTotal := 83,
    ScoverageKeys.coverageFailOnMinimum := true,
    ScoverageKeys.coverageHighlighting := true,
    scalacOptions ++= Seq(
      "-feature",
      "-Wconf:src=routes/.*:s",
      "-Wconf:cat=unused-imports&src=views/.*:s"
    ),
    libraryDependencies ++= AppDependencies(),
    // concatenate js
    Concat.groups := Seq(
      "javascripts/registerestatesuitabilityfrontend-app.js" ->
        group(
          Seq(
            "javascripts/registerestatesuitabilityfrontend.js",
            "javascripts/autocomplete.js",
            "javascripts/iebacklink.js",
            "javascripts/print.js",
            "javascripts/autocomplete/location-autocomplete.min.js"
          )
        )
    ),
    // prevent removal of unused code which generates warning errors due to use of third-party libs
    uglifyCompressOptions := Seq("unused=false", "dead_code=false"),
    pipelineStages := Seq(digest),
    uglifyOps := UglifyOps.singleFile,
    // below line required to force asset pipeline to operate in dev rather than only prod
    Assets / pipelineStages := Seq(concat, uglify),
    // only compress files generated by concat
    uglify / includeFilter := GlobFilter("registerestatesuitabilityfrontend-*.js")
  )

addCommandAlias("scalastyleAll", "all scalastyle Test/scalastyle")
